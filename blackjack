#imports of stuff
import random as r
import time as t
import copy as c

#the list of cards value
card_list_1=[1,2,3,4,5,6,7,8,9,10,10,10]
card_list_2=[1,2,3,4,5,6,7,8,9,10,10,10]
card_list_3=[1,2,3,4,5,6,7,8,9,10,10,10]
card_list_4=[1,2,3,4,5,6,7,8,9,10,10,10]

#save of all the cards and to "shuffle" them
save_card_list_1=c.deepcopy(card_list_1)
save_card_list_2=c.deepcopy(card_list_2)
save_card_list_3=c.deepcopy(card_list_3)
save_card_list_4=c.deepcopy(card_list_4)

#how we pick what list to use
deck_list=[
  card_list_1,
  card_list_2,
  card_list_3,
  card_list_4
]

#the list of the card names
card_list_type=[
 "♥♥",
  "♠♠",
  "♦♦",
  "♠♠"
]

#the list of the face cards
face_card_list=[
  "J","Q","K"
]

#money
money=100
bet=0

#hand of the player
hand_see=[]
num_hand=[]
ace_hand=0

#hand of the dealer
dealer_see=[]
num_dealer=[]
ace_dealer=0
#temp placeholder

""" the list of functions """
#the function to "shuffle" the list/restore the list
def suffle_card():
  print("too little cards in deck shuffling")
  print("shuffling")
  #the backup list
  c.deepcopy(save_card_list_1)
  c.deepcopy(save_card_list_2)
  c.deepcopy(save_card_list_3)
  c.deepcopy(save_card_list_4)
  t.sleep(2)
  print("shuffle done")

#the function to pick a face card style
def random_face_card():
  face_picker=r.randint(0,2)
  return face_picker

#to get which list to use
def random_3():
  #to check all the card lists have 3 or more cards
  if ((len(card_list_1) < 3 and len(card_list_2) < 3 and 
       len(card_list_3) < 3 and len(card_list_4) < 3) or
  #to check all the card lists have the sum of 10 or more
      (sum(card_list_1) <= 10 and sum(card_list_2) <= 10 and
       sum(card_list_3) <= 10 and sum(card_list_4) <= 10)
    ):#restarts the deck and only the decks
    suffle_card()
  deck_list_picker = r.randint(0,3)
  if deck_list_picker == 0:
    while len(card_list_1)-1 < 2:#makes sure that there is cards in the deck
      random_3()#repets until it picks a with cards in the deck
  if deck_list_picker ==1:
    while len(card_list_2)-1 < 2:
      random_3()
  if deck_list_picker ==2:
    while len(card_list_3)-1 < 2:
      random_3()
  if deck_list_picker == 3:
    while len(card_list_4)-1 < 2:
      random_3()
  return deck_list_picker

#to get a random number for the card
def random_12():
  deck_list_picker=random_3()
  if deck_list_picker == 0: 
    #picks a random "card" from the list
    card_picker = r.randint(0,(len(card_list_1)-1))
    return card_picker
  elif deck_list_picker==1:
    card_picker=r.randint(0,(len(card_list_2)-1))
    return card_picker
  elif deck_list_picker==2:
    card_picker=r.randint(0,(len(card_list_3)-1))
    return card_picker
  elif deck_list_picker==3:
    card_picker=r.randint(0,(len(card_list_4)-1))
    return card_picker

#to draw the card into our hand
def hand_draw():
  global ace_hand
  deck_list_picker=random_3()
  card_pick=random_12()
  face_picker=random_face_card()
  #adds the card to the hand
  if card_pick is not None:
    #to check if the card is an ace
    if deck_list_picker==0:
      if card_list_1[card_pick-1]==1:
        #adds style to card
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append("aces")
        ace_hand=ace_hand+1
        num_hand.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_1.pop(card_pick-1)
        #picks the face card to be added
      if card_list_1[card_pick-1]==10:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append(face_card_list[face_picker])
        num_hand.append(10)
        card_list_1.pop(card_pick-1)
      else:
        hand_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        hand_see.append(card_list_1[card_pick-1])
        num_hand.append(card_list_1[card_pick-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_1.pop(card_pick-1)
    elif deck_list_picker==1:
      #to check if the card is an ace
      if card_list_2[card_pick-1]==1:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append("aces")
        ace_hand=ace_hand+1
        num_hand.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_2.pop(card_pick-1)
        #picks the face card to be added
      if card_list_2[card_pick-1]==10:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append(face_card_list[face_picker])
        num_hand.append(10)
        card_list_2.pop(card_pick-1)
      else:
        hand_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        hand_see.append(card_list_2[card_pick-1])
        num_hand.append(card_list_2[card_pick-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_2.pop(card_pick-1)
    elif deck_list_picker==2:
      #to check if the card is an ace
      if card_list_3[card_pick-1]==1:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append("aces")
        ace_hand=ace_hand+1
        num_hand.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_3.pop(card_pick-1)
        #picks the face card to be added
      if card_list_3[card_pick-1]==10:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append(face_card_list[face_picker])
        num_hand.append(10)
        card_list_3.pop(card_pick-1)
      else:
        hand_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        hand_see.append(card_list_3[card_pick-1])
        num_hand.append(card_list_3[card_pick-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_3.pop(card_pick-1)
    elif deck_list_picker==3:
      #to check if the card is an ace
      if card_list_4[card_pick-1]==1:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append("aces")
        ace_hand=ace_hand+1
        num_hand.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_4.pop(card_pick-1)
      #picks the face card to be added
      if card_list_4[card_pick-1]==10:
        hand_see.append(card_list_type[deck_list_picker])
        hand_see.append(face_card_list[face_picker])
        num_hand.append(10)
        card_list_4.pop(card_pick-1)
      else:
        hand_see.append(card_list_type[deck_list_picker])
        #adds a card from the choice list to hand
        hand_see.append(card_list_4[card_pick-1])
        num_hand.append(card_list_4[card_pick-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_4.pop(card_pick-1)
  return hand_see

#to draw a card into the dealer's hand
def dealer_draw():
  global ace_dealer 
  global money
  global bet
  deck_list_picker=random_3()
  card_picker=random_12()
  face_picker=random_face_card()
  #if statement to get the list choice
  if card_picker is not None:
    if deck_list_picker==0:
      #to check if the card is an ace
      if card_list_1[card_picker-1]==1:
        #adds the style of the card
        dealer_see.append(card_list_type[deck_list_picker])
        dealer_see.append("aces")
        num_dealer.append(1)
        card_list_1.pop(card_picker-1)
        ace_dealer=ace_dealer+1 
      if card_list_1[card_picker-1]==10:
        dealer_see.append(card_list_type[deck_list_picker])
        dealer_see.append(face_card_list[face_picker])
        num_dealer.append(10)
        card_list_1.pop(card_picker-1)
      else:
        dealer_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        dealer_see.append(card_list_1[card_picker-1])
        num_dealer.append(card_list_1[card_picker-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_1.pop(card_picker-1)
    elif deck_list_picker==1:
      if card_list_2[card_picker-1]==1:
        dealer_see.append(card_list_type[deck_list_picker])
        ace_dealer=ace_dealer+1
        dealer_see.append("aces")
        num_dealer.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_2.pop(card_picker-1)
      if card_list_2[card_picker-1]==10:
        dealer_see.append(card_list_type[deck_list_picker])
        dealer_see.append(face_card_list[face_picker])
        num_dealer.append(10)
        card_list_2.pop(card_picker-1)
      else:
        dealer_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        dealer_see.append(card_list_2[card_picker-1])
        num_dealer.append(card_list_2[card_picker-1])
        #chosen the card from the chosen list to make it have fewer cards
        card_list_2.pop(card_picker-1)
    elif deck_list_picker==2:
      if card_list_3[card_picker-1]==1:
        dealer_see.append(card_list_type[deck_list_picker])
        ace_dealer=ace_dealer+1
        dealer_see.append("aces")
        num_dealer.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_3.pop(card_picker-1)
      if card_list_3[card_picker-1]==10:
        dealer_see.append(card_list_type[deck_list_picker])
        dealer_see.append(face_card_list[face_picker])
        num_dealer.append(10)
        card_list_3.pop(card_picker-1)
      else:
        dealer_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        dealer_see.append(card_list_3[card_picker-1])
        num_dealer.append(card_list_3[card_picker-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_3.pop(card_picker-1)
    elif deck_list_picker==3:  
      if card_list_4[card_picker-1]==1:
        ace_dealer=ace_dealer+1
        dealer_see.append(card_list_type[deck_list_picker])
        dealer_see.append("aces")
        num_dealer.append(1)
        #pops the card from the chosen list to make it have fewer cards
        card_list_4.pop(card_picker-1)
      if card_list_4[card_picker-1]==10:
        dealer_see.append(card_list_type[deck_list_picker])
        dealer_see.append(face_card_list[face_picker])
        num_dealer.append(10)
        card_list_4.pop(card_picker-1)
      else:
        dealer_see.append(card_list_type[deck_list_picker])
        #adds the card from the chosen list to the hand
        dealer_see.append(card_list_4[card_picker-1])
        num_dealer.append(card_list_4[card_picker-1])
        #pops the card from the chosen list to make it have fewer cards
        card_list_4.pop(card_picker-1)
  return dealer_see

#to let us draw cards multiple times
def drawer(choice):
  if choice=="hit":
    print("drawing \n")
    t.sleep(2)
    hand_draw()
    print_h()
    hand_check(num_hand)

#to print the sum of num hand 
def print_h():
  temp_hand=sum(num_hand)
  print("your hand is",hand_see, "\n")
  if ace_hand >=1:#checks is we have aces
    temp_hand_a=sum(num_hand)+(10*ace_hand)
    #print both 1 and 11 with the ace
    print("your sum is",temp_hand,"or",temp_hand_a,"\n")
  else:
    print("your sum is",temp_hand,"\n")

#prints the sum of the dealer's hand
def print_d():
  print("the dealers hand is",dealer_see,"\n")
  temp_dealer=sum(num_dealer)
  if ace_dealer >=1:#checks is have as aces
    temp_dealer_a=sum(num_dealer)+(10*ace_dealer)
    #print both 1 and 11 with the ace
    print("dealer sum is",temp_dealer,"or",temp_dealer_a,"\n")
  else:
    print("dealer sum is",temp_dealer,"\n")

#checka the sum of our hand
def hand_check(num_hand):
  temp_hand=sum(num_hand)
  temp_hand_a=0
  if ace_hand >=1:
    temp_hand_a=sum(num_hand)+(10*ace_hand)
  #checks to make sure we didn't bust heh
  if (temp_hand >21 and ace_hand ==0) or\
    (temp_hand > 21 and ace_hand == 0) and (temp_hand_a > 21 and ace_hand>=1) :
    print("you lose \n")
    playing()
  else:
    player_turn()

#to move the game to the dealer turn
def dealer_turn():
  global money
  global bet
  temp_dealer=sum(num_dealer)
  temp_dealer_a=0
  if ace_dealer >=1:
    temp_dealer_a=sum(num_dealer)+(10*ace_dealer)
  temp_hand=sum(num_hand)
  temp_hand_a=0
  if ace_hand >=1:
    temp_hand_a=sum(num_hand)+(10*ace_hand)
#check if we won or lost
  i=0
  if i==0:
    #only happens if once a game
    print("dealers turn \n")
    dealer_see.pop()
    i=1+i
  #checks if the dealer has a sum of 17 or more
  if temp_dealer > 21:
    print("you win \n")
    money=money+(bet*2)
    playing()
  #checks if the dealer has a sum the same as ours w/o an ace
  elif (temp_dealer==temp_hand and ace_dealer==0 and ace_hand==0) or \
  ((temp_dealer_a==temp_hand_a) and ace_hand >=1 and ace_dealer >=1) :
    print("tie")
    money=money+bet
    playing()
  #checks if the dealer has a sum greater than ours and is less than 21
  elif temp_dealer > temp_hand and temp_dealer < 21 :
    print("dealer won \n")
    playing()
  #checks if the dealer has no ace but we do 
  elif (temp_hand_a <= 21 and ace_hand >=1) > (temp_dealer and ace_dealer ==0) or\
(temp_hand_a <= 21 and ace_hand ==1) >(temp_dealer_a and ace_dealer >= 1):
    print("you win \n")
    money=money+(bet*2)
    playing()
  #checks if the dealer has a sum less than ours and is less than 21
  elif (temp_dealer < temp_hand) and ((temp_dealer < 21) or
       (temp_dealer_a < 21 and ace_dealer>=1)) :
    dealer_draw()
    t.sleep(1)
    print_d()
    dealer_turn()

#to start our turn
def player_turn():
  global money
  global bet
  choice=input("hit or stand? \n")
  while choice == "hit":
    drawer(choice)
  print_h()
  dealer_turn()

#to play aging
def playing():
  if money>0:
    ch=input("do you want to play again?\n")
    if ch=="yes" or ch=="y":
      #resets the deck and everything else
      hand_see.clear()
      ace_hand=0
      dealer_see.clear()
      ace_dealer=0
      num_hand.clear()
      num_dealer.clear()
      main()
    else:
      print("thanks for playing")
      exit()
  else:
    print("you have no money left bye")
    exit()

#stars the game
def main():
  global money
  global bet
  print("ready to play blackjack \n")
  t.sleep(1)
  print("you have",money,"dollars \n")
  t.sleep(1)
  bet=int(input("how much do you want to bet \n"))
  while bet > money:
    print("you dont have that much money \n")
    bet=int(input("how much do you want to bet \n"))
  money=money-bet
  ran=0
  while ran<2:
    ran=ran+1
    hand_draw()
  dealer_draw()
  print("drawing cards")
  dealer_see.append("?")
  t.sleep(1)
  print_d()
  t.sleep(1)
  print_h()
  t.sleep(1)
  player_turn()

main()
